# MODE=DEV HOST_UID=$(id -u) docker-compose up
#
# Access using fakeservices.datajoint.io
version: '2.4'
services:
  pharus:
    image: jverswijver/pharus:0.2.3.beta.8
    environment:
      # FLASK_ENV: development # enables logging to console from Flask
      API_SPEC_PATH: /main/specs/config.yaml # for dynamic api spec
      PHARUS_MODE: ${MODE}  # DEV | PROD
      PHARUS_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDSoqbcsRWg01+Z\nMOvWh34Qy95VUcPVqu76UdyhWh2uf8jOFEnH89DT+AapbrLCN2YihpQ4vmM4juiB\n74CoKdAX+AGJXUlnaH4m7DHUqlXXzYIOz4BrnBVO7BxP9ZW2hGRPA2veNXrCI0sl\nTWJ0xoFrBCK4ONvMF6uRjH1rGEB8eEO1aIueaiF1UNbhKLw56kBxbM2RHyS+2oUs\nZS/4FqlHRBO35dxb4cE0ncuHpRufc5Qpu0oB8YIneABM12T0Z9eBYhKW994H95W2\nsvRjFKFbryxIbub3dqarmg6A3ohOuMRklnhitZ69eXhDBcbeJN2JUp+3A5SHFed9\npDRscHXHAgMBAAECggEAa6ZBDU1btmQQ2aQNBAkfPspSiNxO7+Z6WGh6D+SUgtg/\n8kKgKpbLRWnfTbyLk4LoqgCJxC5ZW1B+N9oFsOwdtAJGFsQcfcMDpjTUitG7KZ2Y\nOKWIBncw1LMLDTqAF1W2RkODX3+Ji6qp/xh7lx7UibMFY417l+UJBEv+1TsByhpn\nbMJXchxHybzQxW+9UY5JSgcNr3JQ9zMXUuRpqiZ2hSK6L7dH6HUVv21I/JEJ3nKK\ndmIAfgGiKkD8LmFgVIRnWM6AWb5R8Sjfk186bjypSs9MHrcFiVJVa7L0ZXHQs3jM\n2dJwWMJf9rGfnLyyMDU4n4wIQ0aESEvzsdSBGlLf8QKBgQDsB3OQG8ZK19RGdpVp\nPFfnib3yCHeiNqdgS/9Agay9hpyfWtK9s+DMpI19gsrMSM2EEa6j5qxWT34+BzAd\nZcRAwNMSwss66usE9fRNReZ0c7SHLv6BJl/VDjGCu4XcynE9Tq4GtIr6ena3Wnni\n9n7xuA/qpjUVt0CTy4gYZcqZxQKBgQDkdSef3YjX7f65JwV2G8u129VhmzZAGfRU\nHIVzl9v3joFllAxhoKyK7ix1gTEGoBioTtzTmTqABrpJaHLPuoFRZ3iYlUgEcgjo\nCTIco6k74CH4Mho6EI8V/Yag9GVjGHgDb150Ao6MKY/rnZhjK/9udrb2EYD7V+E4\nQiqjvzMmGwKBgE7v1whVIaYaNJY0RpfhZIy9FleB2XDY0nV0NTO/qqPgBzWMTHrB\nU+ddCSz2txhHKOSIfV23Yd+jyla4VLEgPdhiJLVbjFhyBJOuJjxJql876x5i6x8K\nVHaOvqQ4Tvaehey5CZ6Ydvp6RoXfrm/nfGEe68PQPmS62tAS+7sdH/r5AoGATmYN\n1QSXI1Ke6TcE3sUnIR9xmG9FLLY7bGnlOgfRCqEysoMdxJr42yxkwWY2RsnF7Gwz\nx8F7m9ezMeHQFI0yN5dEgUgpUK05dTdCpSVcvBlsTtoSuf5Yu/kmrDFyYZFSDgu3\n5CPEe0EADKEmXFIK9AN1Qfg7xQUhWscKDutcSCUCgYEAtX0j+9N67pUs6qvCDUlZ\nWzAq5L1RdE/t5jV5QLAm4QlQMHhqU5IAVjogUD0C2sP8+psJdW0yPKuV2UkBo/Iw\nuhSEEshUJkFOWTrb2rYMcvfdWrgVMO5DjuZrz3lCxOp4ojm6vKAOwOHw4lUH/2Kz\nK7FsGX5UOA3wQR59TmlO7lo=\n-----END PRIVATE KEY-----\n"
      PHARUS_PUBLIC_KEY: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSoqbcsRWg01+ZMOvWh34Qy95VUcPVqu76UdyhWh2uf8jOFEnH89DT+AapbrLCN2YihpQ4vmM4juiB74CoKdAX+AGJXUlnaH4m7DHUqlXXzYIOz4BrnBVO7BxP9ZW2hGRPA2veNXrCI0slTWJ0xoFrBCK4ONvMF6uRjH1rGEB8eEO1aIueaiF1UNbhKLw56kBxbM2RHyS+2oUsZS/4FqlHRBO35dxb4cE0ncuHpRufc5Qpu0oB8YIneABM12T0Z9eBYhKW994H95W2svRjFKFbryxIbub3dqarmg6A3ohOuMRklnhitZ69eXhDBcbeJN2JUp+3A5SHFed9pDRscHXH"
    user: ${HOST_UID}:anaconda
    volumes:
      - ./config.yaml:/main/specs/config.yaml #copy the spec over to /main/specs/YOUR_SPEC_NAME
    command:
      - sh
      - -c
      - |
        pharus_update() {
            [ -z "$$PRIMARY_PID" ] || kill $$PRIMARY_PID
            if [ "$$PHARUS_MODE" == "DEV" ]; then
                export DEBUG=1
                export FLASK_ENV=development
                pharus &
            else
                gunicorn --bind 0.0.0.0:$${PHARUS_PORT} pharus.server:app &
            fi
            PRIMARY_PID=$$!
        }
        pharus_update
        echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Monitoring Pharus updates..."
        INIT_TIME=$$(date +%s)
        LAST_MOD_TIME=$$(date -r $$API_SPEC_PATH +%s)
        DELTA=$$(expr $$LAST_MOD_TIME - $$INIT_TIME)
        while true; do
           CURR_LAST_MOD_TIME=$$(date -r $$API_SPEC_PATH +%s)
           CURR_DELTA=$$(expr $$CURR_LAST_MOD_TIME - $$INIT_TIME)
           if [ "$$DELTA" -lt "$$CURR_DELTA" ]; then
               echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Reloading Pharus since \`$$API_SPEC_PATH\` changed."
               pharus_update
               DELTA=$$CURR_DELTA
           else
               sleep 5
           fi
        done
    # ports:
    # - "5000:5000"
    networks:
      - main
  sci-viz:
    image: jverswijver/sciviz:0.1.2-beta.6
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_DJLABBOOK_BACKEND_PREFIX=/api
      - FRONTEND_SPEC_PATH=config.yaml
      - SCIVIZ_MODE=${MODE}  # DEV | PROD
    volumes:
      - ./config.yaml:/main/config.yaml
    # ports:
    #   - "3000:3000"
    command:
      - sh
      - -c
      - |
        sciviz_update() {
            sleep 2  # delaying to ensure pharus is up
            [ -z "$$PRIMARY_PID" ] || kill $$PRIMARY_PID
            if [ "$$SCIVIZ_MODE" == "DEV" ]; then
                python frontend_gen.py
                yarn run start &
            else
                rm -R /usr/share/nginx/html
                python frontend_gen.py
                yarn build
                mv ./build /usr/share/nginx/html
                nginx -g "daemon off;" &
            fi
            PRIMARY_PID=$$!
        }
        sciviz_update
        echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Monitoring SciViz updates..."
        INIT_TIME=$$(date +%s)
        LAST_MOD_TIME=$$(date -r $$FRONTEND_SPEC_PATH +%s)
        DELTA=$$(expr $$LAST_MOD_TIME - $$INIT_TIME)
        while true; do
           CURR_LAST_MOD_TIME=$$(date -r $$FRONTEND_SPEC_PATH +%s)
           CURR_DELTA=$$(expr $$CURR_LAST_MOD_TIME - $$INIT_TIME)
           if [ "$$DELTA" -lt "$$CURR_DELTA" ]; then
               echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Reloading SciViz since \`$$FRONTEND_SPEC_PATH\` changed."
               sciviz_update
               DELTA=$$CURR_DELTA
           else
               sleep 5
           fi
        done
    networks:
      - main
  fakeservices.datajoint.io:
    image: datajoint/nginx:v0.0.19
    environment:
      - ADD_pharus_TYPE=REST
      - ADD_pharus_ENDPOINT=pharus:5000
      - ADD_pharus_PREFIX=/api
      - ADD_sciviz_TYPE=REST
      - ADD_sciviz_ENDPOINT=sci-viz:3000
      - ADD_sciviz_PREFIX=/
      - HTTPS_PASSTHRU=TRUE
    ports:
      - "443:443"
      - "80:80"
    networks:
      - main
networks:
  main: